// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
// Enum for user roles


model User {
  user_id    Int      @id @default(autoincrement())
  name       String   
  email      String   @unique
  password   String
  role       String @default("audience")
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  order Order[]
  


  
  @@map("users")
}

model Product {
  product_id Int      @id @default(autoincrement())
  name       String
  price      Float
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  
  orderItems OrderItem[]
  
  @@map("products")
}

model Order {
  order_id   Int      @id @default(autoincrement())
  user_id    Int
  total_price Float
  deposit Int @default(0)
  remaining Int @default(0)
  cleated_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user       User     @relation(fields: [user_id], references: [user_id])
  orderItems OrderItem[]

  @@map("orders")
}

model OrderItem {
  order_item_id Int      @id @default(autoincrement())
  order_id      Int
  product_id    Int
  quantity      Int
  total_price   Float
  
  order         Order    @relation(fields: [order_id], references: [order_id])
  product       Product  @relation(fields: [product_id], references: [product_id])

  @@map("order_items")
}



